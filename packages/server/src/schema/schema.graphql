# Import generated types
# import * from "../generated/prisma.graphql"

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
}

type Mutation {
  # create
  createApplication(data: ApplicationCreateInput!): Application!
  createCandidate(data: CandidateCreateInput!): Candidate!
  createJob(data: JobCreateInput!): Job!
  createTask(data: TaskCreateInput!): Task!
}

interface Node {
  id: ID!
}

input WorkspaceCreateInput {
  name: String!
  firstName: String
  lastName: String
  email: String!
  username: String!
  password: String!
}

input SignupInput {
  password: String!
  username: String!
  inviteId: ID!
}

input LoginInput {
  email: String!
  password: String!
}

input RefreshInput {
  token: String!
}

type AuthPayload {
  token: String!
  refresh: String!
}

type AccessPayload {
  token: String!
}

input InviteCreateInput {
  email: String!
}
