input WorkspaceCreateInput {
  name: String!
  firstName: String
  lastName: String
  email: String!
  username: String!
  password: String!
}

input SignupInput {
  password: String!
  username: String!
  inviteId: ID!
}

input LoginInput {
  email: String!
  password: String!
}

input InviteCreateInput {
  email: String!
}

type Mutation {
  # import AuthPayload from "../types/auth.graphql"
  createWorkspace(data: WorkspaceCreateInput): AuthPayload!
  signup(data: SignupInput): AuthPayload!
  login(data: LoginInput): AuthPayload!

  # import Invite from "../../generated/prisma.graphql"
  createInvite(data: InviteCreateInput): Invite!
  # import InviteWhereUniqueInput from "../../generated/prisma.graphql"
  deleteInvite(data: InviteWhereUniqueInput): Invite!
}
