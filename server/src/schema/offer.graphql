type Query {
  offer(where: OfferWhereUniqueInput!): Offer
  offers(
    where: OfferWhereInput
    orderBy: OfferOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Offer]!
}

type Mutation {
  createOffer(data: OfferCreateInput!): Offer!
  updateOffer(data: OfferUpdateInput!, where: OfferWhereUniqueInput!): Offer
  deleteOffer(where: OfferWhereUniqueInput!): Offer
}

type Offer {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!

  title: String!
  department: String
  location(where: LocationWhereInput): Location
  description: String
  requirements: String
  applications(
    where: ApplicationWhereInput
    orderBy: ApplicationOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Application!]
  stages(
    where: StageWhereInput
    orderBy: StageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Stage!]
}

enum OfferOrderByInput {
  title_ASC
  title_DESC
  department_ASC
  department_DESC
}

input OfferWhereUniqueInput {
  id: ID
}

input OfferWhereInput {
  AND: [OfferWhereInput!]
  OR: [OfferWhereInput!]
  NOT: [OfferWhereInput!]

  id: ID

  title: String
  title_contains: String

  department: String
  department_contains: String

  description: String
  description_contains: String

  requirements: String
  requirements_contains: String

  location: LocationWhereInput

  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput

  stages_every: StageWhereInput
  stages_some: StageWhereInput
  stages_none: StageWhereInput
}

input OfferCreateInput {
  title: String!
  department: String
  description: String
  requirements: String
  location: LocationCreateOneInput
  stages: StageCreateManyInput
}

input LocationCreateOneInput {
  create: LocationCreateInput
  connect: LocationWhereUniqueInput
}

input LocationCreateInput {
  country: String!
  region: String!
  city: String!
  zip: String!
}

input LocationWhereUniqueInput {
  id: ID
}

input OfferUpdateInput {
  title: String
  department: String
  description: String
  requirements: String
  location: LocationUpdateOneInput
  stages: StageUpdateManyInput
}

input LocationUpdateOneInput {
  create: LocationCreateInput
  connect: LocationWhereUniqueInput
  disconnect: Boolean
}
