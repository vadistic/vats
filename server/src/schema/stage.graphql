# import Stage, StageCreateInput, StageUpdateInput from "../generated/prisma.graphql"

type Mutation {
  createStage(data: StageCreateInput!): Stage!
  updateStage(data: StageUpdateInput!, where: StageWhereUniqueInput!): Stage
  deleteStage(where: StageWhereUniqueInput!): Stage
}

input StageWhereUniqueInput {
  id: ID
}

input StageWhereInput {
  AND: [StageWhereInput!]
  OR: [StageWhereInput!]
  NOT: [StageWhereInput!]
  id: ID
  name: String
  position: Int
}

input StageCreateManyInput {
  create: [StageCreateInput!]
}

input StageUpdateManyInput {
  create: [StageCreateInput!]
  delete: [StageWhereUniqueInput!]
  update: [StageUpdateWithWhereUniqueNestedInput!]
}

input StageUpdateWithWhereUniqueNestedInput {
  where: StageWhereUniqueInput!
  data: StageUpdateDataInput!
}

input StageUpdateDataInput {
  name: String
  description: String
  position: Int
}
