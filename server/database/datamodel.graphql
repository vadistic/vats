type Post {
  id: ID! @unique
  title: String!
  content: String
  author: User!
}

type Person {
  id: ID! @unique
}

type Organisation {
  id: ID! @unique
  users: [User!]!
  name: String!
}

type User {
  id: ID! @unique
  email: String! @unique
  username: String!
  password: String!
  firstName: String
  lastName: String
  lastLogin: DateTime
  createdAt: DateTime!
  deletedAt: DateTime
  organisation: Organisation!
}

type Action {
  id: ID! @unique
  date: DateTime!
  owner: Person!
  type: String!
}

type Comment {
  id: ID! @unique
  content: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Task {
  id: ID! @unique
  createdAt: DateTime!
  dueAt: DateTime!
  owners: [User!]!
}

type Candidate implements Person {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  tags: [String!]
  actions: [Action!]!
  basic: CandidateBasic
  meta: CandidateMeta
  applications: [Application!]!
}

type CandidateBasic {
  firstName: String!
  lastName: String!
  emails: [String!]
  phones: [String!]
  links: [String!]
}

type CandidateMeta {
  source: String!
}

type Country {
  id: ID! @unique
  name: String!
  code: String!
  telPrefix: Int!
}

type Location {
  country: Country!
  region: String!
  city: String!
  zip: String!
}

type Stage {
  id: ID! @unique
  name: String!
  position: Int!
}

type Application {
  offer: Offer!
  candidate: Candidate!
  stage: Stage!
}

type Offer {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  department: String
  location: Location
  description: String
  requirements: String
  applications: [Application!]!
  stages: [Stage!]!
}
